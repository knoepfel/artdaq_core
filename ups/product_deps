# The parent line must be the first non-comment line in the file
# This line defines the product name and version
parent artdaq_core
defaultqual	e20:s128

# These optional lines define the installed directories where
# headers, libraries, and executables will be found
# Use them only if your product does not conform to the defaults
# Format: directory_type directory_path directory_name
# The only recognized values of the first field are incdir, libdir, and bindir
# The only recognized values of the second field are product_dir and fq_dir
# The third field is not constrained
# The examples here reflect the defaults
incdir      product_dir include
libdir      fq_dir      lib
bindir      fq_dir      bin
fcldir      -
perllib  product_dir

old_style_config_vars

#
product			version		optional
canvas_root_io  v1_14_00    s132
canvas_root_io  v1_13_06    s131
canvas_root_io  v1_13_05    s130
canvas_root_io  v1_13_04    s129
canvas_root_io  v1_13_03    s128
canvas_root_io  v1_11_03    s120b
canvas_root_io  v1_11_02    s120a
TRACE			v3_17_11
cetmodules		v3_24_01	-	only_for_build
end_product_list

# -nq- means there is no qualifier
# a "-" means the dependent product is not required by the parent and will not be setup
qualifier		canvas_root_io	TRACE	notes
e28:s132:debug	e28:debug		-nq-	-std=c++20
e28:s132:prof	e28:prof		-nq-	-std=c++20

c14:s131:debug	c14:debug		-nq-	-std=c++17
c14:s131:prof	c14:prof		-nq-	-std=c++17
#c15:s131:debug	c15:debug		-nq-	-std=c++17
#c15:s131:prof	c15:prof		-nq-	-std=c++17
e20:s131:debug	e20:debug		-nq-	-std=c++17
e20:s131:prof	e20:prof		-nq-	-std=c++17
e26:s131:debug	e26:debug		-nq-	-std=c++17
e26:s131:prof	e26:prof		-nq-	-std=c++17
e28:s131:debug	e28:debug		-nq-	-std=c++20
e28:s131:prof	e28:prof		-nq-	-std=c++20

c14:s130:debug	c14:debug		-nq-	-std=c++17
c14:s130:prof	c14:prof		-nq-	-std=c++17
#c15:s130:debug	c15:debug		-nq-	-std=c++17
#c15:s130:prof	c15:prof		-nq-	-std=c++17
e20:s130:debug	e20:debug		-nq-	-std=c++17
e20:s130:prof	e20:prof		-nq-	-std=c++17
e26:s130:debug	e26:debug		-nq-	-std=c++17
e26:s130:prof	e26:prof		-nq-	-std=c++17
e28:s130:debug	e28:debug		-nq-	-std=c++20
e28:s130:prof	e28:prof		-nq-	-std=c++20

c14:s129:debug	c14:debug		-nq-	-std=c++17
c14:s129:prof	c14:prof		-nq-	-std=c++17
#c15:s129:debug	c15:debug		-nq-	-std=c++17
#c15:s129:prof	c15:prof		-nq-	-std=c++17
e20:s129:debug	e20:debug		-nq-	-std=c++17
e20:s129:prof	e20:prof		-nq-	-std=c++17
e26:s129:debug	e26:debug		-nq-	-std=c++17
e26:s129:prof	e26:prof		-nq-	-std=c++17
e28:s129:debug	e28:debug		-nq-	-std=c++20
e28:s129:prof	e28:prof		-nq-	-std=c++20

c14:s128:debug	c14:debug		-nq-	-std=c++17
c14:s128:prof	c14:prof		-nq-	-std=c++17
#c15:s128:debug	c15:debug		-nq-	-std=c++17
#c15:s128:prof	c15:prof		-nq-	-std=c++17
e20:s128:debug	e20:debug		-nq-	-std=c++17
e20:s128:prof	e20:prof		-nq-	-std=c++17
e26:s128:debug	e26:debug		-nq-	-std=c++17
e26:s128:prof	e26:prof		-nq-	-std=c++17
e28:s128:debug	e28:debug		-nq-	-std=c++20
e28:s128:prof	e28:prof		-nq-	-std=c++20

c7:s120b:debug	c7:debug		-nq-	-std=c++17
c7:s120b:prof	c7:prof			-nq-	-std=c++17
c14:s120b:debug	c14:debug		-nq-	-std=c++17
c14:s120b:prof	c14:prof		-nq-	-std=c++17
e20:s120b:debug	e20:debug		-nq-	-std=c++17
e20:s120b:prof	e20:prof		-nq-	-std=c++17
e26:s120b:debug	e26:debug		-nq-	-std=c++17
e26:s120b:prof	e26:prof		-nq-	-std=c++17

c7:s120a:debug	c7:debug		-nq-	-std=c++17
c7:s120a:prof	c7:prof			-nq-	-std=c++17
c14:s120a:debug	c14:debug		-nq-	-std=c++17
c14:s120a:prof	c14:prof		-nq-	-std=c++17
e20:s120a:debug	e20:debug		-nq-	-std=c++17
e20:s120a:prof	e20:prof		-nq-	-std=c++17
e26:s120a:debug	e26:debug		-nq-	-std=c++17
e26:s120a:prof	e26:prof		-nq-	-std=c++17

end_qualifier_list


table_fragment_begin
# this is temporary until art and boost define ROOT_INCLUDE_PATH
pathPrepend(ROOT_INCLUDE_PATH, ${ART_INC}:${FHICLCPP_INC}:${CETLIB_INC}:${BOOST_INC}:${ARTDAQ_CORE_INC})
table_fragment_end
#

# Preserve tabs and formatting in emacs and vi / vim:

### Local Variables:
### tab-width: 4
### End:

# vi:set ts=4 noexpandtab:
